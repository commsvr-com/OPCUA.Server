<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="CAS.UA.Server" type="Opc.Ua.ApplicationConfigurationSection,Opc.Ua.Core" />
  </configSections>
  <appSettings>
    <add key="configfile" value="" />
    <add key="PLCNaN" value="" />
    <add key="MinAvgMax_FrameResponse_management" value="20" />
    <add key="MinAvgMax_CharacterGap_management" value="500" />
    <add key="MinAvgMax_Tag_management" value="20" />
    <add key="MinAvgMax_Group_management" value="20" />
    <add key="MinAvgMax_Group_Read_management" value="20" />
    <add key="MinAvgMax_Transaction_management" value="20" />
    <add key="WaitForReconnectServerInSec" value="30" />
    <add key="WaitForFirstGroupUpdateSendInMiliSec" value="1000" />
    <add key="UseLocalTime" value="False" />
    <add key="UseTimeStampToCheckForUpdate" value="" />
    <add key="ClientSettingsProvider.ServiceUri" value="" />
    <!-- CommServer specific:-->
    <add key="ConsoleRemotingHTTPport" value="5758" />
    <!-- CommServer Engine inside CommServer UA uses this console remotting port (default + 1)-->
    <add key="UseLocalTime" value="False" />
    <add key="UseTimeStampToCheckForUpdate" value="False" />
    <add key="MinAvgMax_Transaction_management" value="20" />
    <!-- unused: -->
    <add key="ItemDsc_configfile" value="" />
    <add key="RemotingHTTPport" value="" />
  </appSettings>
  <system.serviceModel>
    <!-- 
      UA servers built with the SDK use the Opc.Ua.SessionEndpoint class to implement the ISessionEndpoint 
      contract. It is possible to add additional behavoirs in the configuration file by referencing this 
      service. For example, the configuration in this file turns on metadata publishing. 
    -->
    <services>
      <service name="Opc.Ua.SessionEndpoint" behaviorConfiguration="Opc.Ua.SessionEndpoint.Behavior">
        <endpoint address="mex" binding="mexHttpBinding" contract="IMetadataExchange" />
      </service>
    </services>
    <!-- Servers deployed in production environments should turn the httpGetEnabled and includeExceptionDetailInFaults options off -->
    <behaviors>
      <serviceBehaviors>
        <behavior name="Opc.Ua.SessionEndpoint.Behavior">
          <serviceMetadata httpGetEnabled="true" />
          <serviceDebug includeExceptionDetailInFaults="true" />
          <!--
          <serviceThrottling maxConcurrentCalls="100"
          maxConcurrentInstances="100"
          maxConcurrentSessions="100"/>-->
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <!--
      Uncommenting this <diagnostics> block will turn on message logging. The contents and the location of the
      log file are specified in the  <system.diagnostics> block.
    -->
    <!--
    <diagnostics>
      <messageLogging logEntireMessage="true" maxMessagesToLog="3000" logMessagesAtServiceLevel="true" logMalformedMessages="true" logMessagesAtTransportLevel="true"/>
    </diagnostics>
    -->
  </system.serviceModel>
  <CAS.UA.Server>
    <ConfigurationLocation xmlns="http://opcfoundation.org/UA/SDK/Configuration.xsd">
      <FilePath>EmbeddedExample\DemoConfiguration\BoilerExample.uasconfig</FilePath>
    </ConfigurationLocation>
  </CAS.UA.Server>
</configuration>